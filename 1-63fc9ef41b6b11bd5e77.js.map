{"version":3,"sources":["webpack:///./src/components/dots.js","webpack:///./src/images/icons/social.js","webpack:///./src/components/speakers/speaker-card.js","webpack:///./src/components/useMedia.js","webpack:///./src/components/speakers/speakers-section.js"],"names":["Dots","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","props","position","zIndex","containerLeftOffset","containerRightOffset","height","top","left","right","bottom","__webpack_exports__","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","Github","_ref","fill","width","title","core_browser_esm","xmlns","viewBox","fillRule","d","Twitter","_ref2","StyledAnimatedBox","styled_base_browser_esm","animated","div","name","styles","StyledImage","Img","DescriptionList","Box","withComponent","Name","Text","CompanyName","DescriptionDefinition","calc","x","y","window","innerHeight","innerWidth","trans","s","useModal","initial","_useState","useState","isOpen","setIsOpen","useCallback","status","SpeakerCard","company","twitter","github","img","_useSpring","useSpring","xys","config","mass","tension","friction","set","_useModal","shouldDisableAnimation","query","_ref$defaultMatches","defaultMatches","_ref$matchMedia","matchMedia","matches","setMatches","useEffect","mql","listener","addListener","removeListener","useMedia","react_default","a","Fragment","onMouseMove","clientX","clientY","onMouseLeave","style","animation","transform","interpolate","fluid","src","childImageSharp","alt","mt","fontWeight","color","layout_components","display","alignItems","mr","components_link","href","openInNewTab","social_Twitter","social_Github","Speakers","edges","_3787682009","data","allSpeakersJson","Grid","Column","index","i","length","getColumnAlignment","map","num","filter","node","key","_extends"],"mappings":"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","file":"1-63fc9ef41b6b11bd5e77.js","sourcesContent":["import React from \"react\"\nimport styled from \"@emotion/styled\"\n\nconst Dots = styled.div`\n  position: ${props =>\n    props.position === \"absolute\" ? \"absolute\" : \"relative\"};\n  z-index: ${props => props.zIndex || \"auto\"};\n  top: 0;\n  height: 100%;\n  left: ${props => props.containerLeftOffset || \"auto\"};\n  right: ${props => props.containerRightOffset || \"auto\"};\n  &::after {\n    content: \"\";\n    display: block;\n    height: ${props => props.height || \"100%\"};\n    width: 160px;\n    top: ${props => props.top || \"-50px\"};\n    left: ${props => props.left || \"auto\"};\n    right: ${props => props.right || \"auto\"};\n    bottom: ${props => props.bottom || \"auto\"};\n    position: absolute;\n    background: radial-gradient(red 15%, transparent 16%) 1px 1px / 16px 16px,\n      radial-gradient(rgba(255, 255, 255, 0) 15%, transparent 20%) 8px 9px;\n  }\n`\n\nexport default props => <Dots {...props} />\n","import React from \"react\"\n\nexport const Github = ({ fill, width, height, title }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={width}\n    height={height}\n    fill={fill}\n    viewBox=\"0 0 16 16\"\n  >\n    <title>{title}</title>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n    />\n  </svg>\n)\n\nexport const Twitter = ({ fill, width, height, title }) => (\n  <svg\n    fill={fill}\n    width={width}\n    height={height}\n    viewBox=\"0 0 28 28\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <title>{title}</title>\n    <path d=\"M22 10.5V10c.8-.6 1.5-1.3 2-2.1-.7.3-1.5.5-2.4.6.9-.5 1.5-1.3 1.8-2.3-.8.5-1.7.8-2.6 1-1.3-1.4-3.3-1.7-4.9-.8-1.6.9-2.5 2.7-2.1 4.5-3.3-.2-6.4-1.7-8.5-4.3-1.1 1.9-.5 4.3 1.3 5.5-.7 0-1.3-.2-1.9-.5v.1c0 2 1.4 3.6 3.3 4-.6.2-1.2.2-1.9.1.5 1.7 2.1 2.8 3.8 2.8-1.5 1.1-3.2 1.8-5.1 1.8-.3 0-.7 0-1-.1 1.9 1.2 4.1 1.8 6.3 1.8 7.7 0 11.9-6.2 11.9-11.6z\" />\n  </svg>\n)\n","import React, { useState, useCallback } from \"react\"\nimport { Box, Text } from \"../layout-components\"\nimport { useSpring, animated } from \"react-spring\"\n// import Modal from \"./speaker-modal\"\nimport Link from \"../link\"\nimport { Twitter, Github } from \"../../images/icons/social\"\nimport Img from \"gatsby-image\"\nimport useMedia from \"../useMedia\"\nimport styled from \"@emotion/styled\"\n\nconst StyledAnimatedBox = styled(animated.div)`\n  overflow: hidden;\n  background: linear-gradient(\n    135deg,\n    rgba(241, 89, 89, 1) 25%,\n    rgba(130, 70, 149, 1) 55%,\n    rgba(1, 46, 111, 1) 100%\n  );\n  border-bottom-right-radius: 50%;\n  box-shadow: 0px 10px 30px -5px rgba(0, 0, 0, 0.3);\n  transition: box-shadow 0.5s;\n  will-change: transform;\n  &:hover,\n  &:focus {\n    outline: 0;\n    box-shadow: 0px 30px 100px -10px rgba(0, 0, 0, 0.4);\n  }\n`\n\nconst StyledImage = styled(Img)`\n  object-fit: cover;\n  display: block;\n  height: 350px;\n  width: 100%;\n  border-bottom-right-radius: 50%;\n  @media screen and (min-width: 52em) {\n    mix-blend-mode: luminosity;\n    isolation: isolate;\n    &:hover,\n    &:focus {\n      mix-blend-mode: normal;\n    }\n  }\n`\n\nconst DescriptionList = Box.withComponent(\"dl\")\n\nconst Name = Text.withComponent(\"dt\")\n\nconst CompanyName = Text.withComponent(\"dd\")\n\nconst DescriptionDefinition = Box.withComponent(\"dd\")\n\nconst calc = (x, y) => [\n  -(y - window.innerHeight / 2) / 20,\n  (x - window.innerWidth / 2) / 20,\n  1.1,\n]\n\n// From https://codesandbox.io/embed/rj998k4vmm\nconst trans = (x, y, s) => {\n  return `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n}\n\nconst useModal = initial => {\n  const [isOpen, setIsOpen] = useState(initial)\n\n  return [isOpen, useCallback(() => setIsOpen(status => !status))]\n}\n\nexport default function SpeakerCard({ name, company, twitter, github, img }) {\n  const [props, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: { mass: 5, tension: 350, friction: 40 },\n  }))\n\n  const [isOpen, setIsOpen] = useModal(false)\n\n  const shouldDisableAnimation = useMedia({ query: \"(prefers-reduced-motion)\" })\n\n  return (\n    <>\n      <StyledAnimatedBox\n        onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n        onMouseLeave={() => set({ xys: [0, 0, 1] })}\n        style={\n          shouldDisableAnimation\n            ? { animation: \"none\" }\n            : { transform: props.xys.interpolate(trans) }\n        }\n      >\n        <StyledImage fluid={img.src.childImageSharp.fluid} alt={name} />\n      </StyledAnimatedBox>\n      <DescriptionList mt=\"4\">\n        <Name fontWeight=\"bold\">{name}</Name>\n        <CompanyName color=\"mediumGrey\">{company}</CompanyName>\n        <Box display=\"flex\" alignItems=\"center\">\n          {twitter && (\n            <DescriptionDefinition mr=\"1\">\n              <Link href={`https://twitter.com/${twitter}`} openInNewTab>\n                <Twitter\n                  fill=\"#f15959\"\n                  width=\"28px\"\n                  height=\"28px\"\n                  title=\"Twitter\"\n                />\n              </Link>\n            </DescriptionDefinition>\n          )}\n          {github && (\n            <dd>\n              <Link href={`https://github.com/${github}`} openInNewTab>\n                <Github\n                  fill=\"#f15959\"\n                  width=\"20px\"\n                  height=\"20px\"\n                  title=\"Github\"\n                />\n              </Link>\n            </dd>\n          )}\n        </Box>\n      </DescriptionList>\n\n      {/* {isOpen && (\n        <Modal\n          onRequestClose={setIsOpen}\n          isOpen={isOpen}\n          name={name}\n          src={src}\n          company={company}\n          twitter={twitter}\n          github={github}\n        />\n      )} */}\n    </>\n  )\n}\n","import { useState, useEffect } from \"react\"\n\n// From @mhamlin - https://github.com/hamlim/components/blob/master/packages/components/src/UseMedia.js\nexport default function useMedia({\n  query,\n  defaultMatches = false,\n  matchMedia = typeof window !== \"undefined\" && window.matchMedia,\n}) {\n  let [matches, setMatches] = useState(defaultMatches)\n\n  useEffect(() => {\n    let mql = matchMedia(query)\n    setMatches(mql.matches)\n    function listener({ matches }) {\n      setMatches(matches)\n    }\n    mql.addListener(listener)\n    return () => mql.removeListener(listener)\n  }, [query])\n  return matches\n}\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport SpeakerCard from \"./speaker-card\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nexport const query = graphql`\n  fragment SpeakerData on SpeakersJsonEdge {\n    node {\n      name\n      key\n      company\n      img {\n        src {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default function Speakers() {\n  const { allSpeakersJson } = useStaticQuery(\n    graphql`\n      query {\n        allSpeakersJson {\n          edges {\n            ...SpeakerData\n            node {\n              github\n              twitter\n              description\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const { edges } = allSpeakersJson\n\n  const getAlternateRows = index => {\n    const numbers = [3, 4, 5]\n    return numbers.map(num => {\n      let styles\n      for (let i = num; i <= edges.length; i += 6) {\n        if (index === i) {\n          styles = `\n          div,\n          img {\n            border-bottom-right-radius: 0;\n            border-top-left-radius: 50%;\n          }\n          dl {\n            text-align: right;\n          }\n          div {\n            justify-content: flex-end;\n          }\n        `\n        }\n      }\n      return styles\n    })\n  }\n\n  const getColumnAlignment = index => {\n    for (let i = 1; i <= edges.length; i += 3) {\n      if (index % 3 === 1) {\n        return `margin-top: -100px;`\n      }\n    }\n  }\n\n  const Grid = styled.ul`\n    display: grid;\n    justify-items: center;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    grid-gap: 20px;\n    list-style: none;\n  `\n\n  const Column = styled.li`\n    width: 100%;\n    max-width: 350px;\n    @media screen and (min-width: 68em) {\n      ${props => getColumnAlignment(props.index)}\n      ${props => getAlternateRows(props.index)}\n    }\n  `\n\n  // filter out speakers without images\n  const filteredCards = () =>\n    edges.filter(({ node }) => (node.img.src !== null ? node : null))\n\n  return (\n    <Grid>\n      {filteredCards().map(({ node }, index) => (\n        <Column key={node.key} index={index}>\n          <SpeakerCard index={index} {...node} />\n        </Column>\n      ))}\n    </Grid>\n  )\n}\n"],"sourceRoot":""}